# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool: devsu-selfhosted

variables:
  imageRepo: 'gaparedes / devsu'
  tag: '$(Build.BuildId)'
  

steps:

- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'devsu-SonarQube'
    scannerMode: 'Other'
    extraProperties: |
      # Additional properties that will be passed to the scanner,
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      sonar.projectKey=Devsu_Project_Devsu_Project_AYyPwYCOSj0bAddFQMyI
      sonar.projectName=Devsu Project

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'LocalDirectory'
    jdkFile: '/home/gaparedes/jdk/jdk-17_linux-x64_bin.tar.gz'
    jdkDestinationDirectory: '/home/gaparedes/jdk/binaries'
    cleanDestinationDirectory: true
    createExtractDirectory: false

- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    codeCoverageToolOption: 'JaCoCo'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'

- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'

- task: Docker@2
  inputs:
    containerRegistry: 'devsu-DockerHub'
    repository: '$(imageRepo)'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: |
      $(tag)
      latest

- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'devsu-aks'
    namespace: 'devsu'
    command: 'apply'
    useConfigurationFile: true
    configuration: '**/demo-devops-java.yml'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Container Registry'
    dockerRegistryEndpoint: 'devsu-DockerHub'


